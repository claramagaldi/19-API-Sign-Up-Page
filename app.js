const express = require("express");
const bodyParser = require("body-parser");
const request = require("request");
const https = require("https");
const client = require("@mailchimp/mailchimp_marketing");
const dotenv = require("dotenv");

const app = express();
dotenv.config();

const API_Key = process.env.API_Key;
const server = API_Key.substring(API_Key.length - 3); //generated by mailchimp
const listID = process.env.listID; //generated by mailchimp

client.setConfig({
  apiKey: API_Key,
  server: server,
});

app.use(express.static("public"));
app.use(bodyParser.urlencoded({
  extended: true
}));

app.get("/", function(req, res) {
  res.sendFile(__dirname + "/signup.html");
})

app.post("/", function(req, res) {
  //Async functions say that this container will be filled,
  //continue on working on stuff and we will notify you when it is.

  //Await just tells javascript to completely stop running the async
  //function until the promise container is filled.

  const run = async () => {
    try {
      const response = await client.lists.addListMember(listID, {
        email_address: req.body.email,
        status: "subscribed",
        merge_fields: {
          FNAME: req.body.firstName,
          LNAME: req.body.lastName
        }
      });
      //if (response.error_count > 0) {
      res.sendFile(__dirname + "/success.html");
    } catch {
      //} else {
      res.sendFile(__dirname + "/failure.html");
    }
  };
  run();
});

app.post("/failure", function(req, res) {
  res.redirect("/");
})

//app.listen(3000, function() {
app.listen(process.env.PORT || 3000, function() { //because we are deploying it on heroku
  console.log("Server is running on port 3000.")
});
